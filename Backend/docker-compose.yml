---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$DATABASE_PASSWORD
      - MYSQL_DATABASE=$DATABASE_NAME
    ports:
      - 3307:$MYSQLDB_DOCKER_PORT
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql
      # - db:/var/lib/mysql

  springbootapp:
    depends_on:
      - mysqldb
    build: ./CourseService
    restart: on-failure
    ports: 
     - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
          "spring.datasource.driver-class-name":"com.mysql.cj.jdbc.Driver",
          "spring.datasource.url":"jdbc:mysql://mysqldb:$DB_PORT/$DB_NAME",
          "spring.datasource.username":"$DB_USERNAME",
          "spring.datasource.password":"$DB_PASSWORD",
          "spring.jpa.hibernate.ddl-auto":"update",
          "spring.servlet.multipart.max-file-size":"-1",
          "spring.servlet.multipart.max-request-size":"-1",

          "topic.name":"$KAFKA_TOPIC_NAME",


          "spring.kafka.bootstrap-servers":"broker:$KAFKA_PORT",

  
          "spring.kafka.producer.client-id":"$KAFKA_CLIENT_ID",
          "spring.kafka.producer.key-serializer":"org.apache.kafka.common.serialization.StringSerializer",
          "spring.kafka.producer.value-serializer":"com.TimeNote.CourseService.kafka.MessageSerializer"

        }'
    #  - DB_HOST=localhost
    #  - DB_NAME=timenotecourseservice
    #  - DB_PASSWORD=Khoi2921432
    #  - DB_PORT=3306
    #  - DB_USERNAME=root
    #  - KAFKA_CLIENT_ID=transport_image_producer
    #  - KAFKA_HOST=localhost
    #  - KAFKA_PORT=9092
    #  - KAFKA_TOPIC_NAME=transport_image
    
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  # app:
  #   depends_on:
  #     - mysqldb
  #   build: ./CourseService
  #   restart: on-failure
  #   env_file: ./.env
  #   ports:
  #     - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
  #   environment:
  #     SPRING_APPLICATION_JSON: '{
  #       "spring.datasource.url"  : "jdbc:mysql://mysqldb:$DATABASE_PORT/$DATABASE_NAME?useSSL=false",
  #       "spring.datasource.username" : "$DATABASE_USERNAME",
  #       "spring.datasource.password" : "$DATABASE_PASSWORD",
  #       "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
  #       "spring.jpa.hibernate.ddl-auto" : "update"}'
  #   volumes:
  #     - .m2:/root/.m2
  #   stdin_open: true
  #   tty: true

volumes:
  db: